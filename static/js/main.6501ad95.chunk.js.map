{"version":3,"sources":["components/ColorConverter.jsx","App.js","reportWebVitals.js","index.js"],"names":["HexConverter","useState","rgb","form","setForm","convertColor","hexColor","hexRgb","format","e","className","style","backgroundColor","onSubmit","preventDefault","console","log","onChange","target","value","length","prev","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAIe,SAASA,IAAgB,IAAD,EAEbC,mBAAS,CAACC,IAAK,KAFF,mBAE9BC,EAF8B,KAExBC,EAFwB,KAUrC,SAASC,EAAaC,GACpB,IAAIJ,EACJ,IACEA,EAAMK,IAAOD,EAAU,CAACE,OAAQ,QAChC,MAAMC,GACNP,EAAM,wCAER,OAAOA,EAcT,OACE,qBAAKQ,UAAU,UAAUC,MA3BlB,CACLC,gBAAiBT,EAAKD,KA0BxB,SACE,sBAAKQ,UAAU,eAAf,UACE,sBAAMA,UAAU,iBAAiBG,SAdlB,SAACJ,GACpBA,EAAEK,iBACFC,QAAQC,IAAIb,IAYR,SACE,uBAAOO,UAAU,kBAAiBO,SAVpB,SAACR,GACS,IAA1BA,EAAES,OAAOC,MAAMC,QACjBhB,GAAQ,SAAAiB,GAAI,kCAASA,GAAT,IAAenB,IAAKG,EAAaI,EAAES,OAAOC,aAQSG,YAAY,cAEzE,qBAAKZ,UAAU,kBAAf,SAAkCP,EAAKD,W,MChChCqB,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6501ad95.chunk.js","sourcesContent":["import './converter.css';\r\nimport {useState} from 'react';\r\nimport hexRgb from 'hex-rgb';\r\n\r\nexport default function HexConverter() {\r\n\r\n  const [form, setForm] = useState({rgb: ''});\r\n\r\n  function changeColor() {\r\n    return {\r\n      backgroundColor: form.rgb,\r\n    }\r\n  }\r\n\r\n  function convertColor(hexColor) {\r\n    let rgb;\r\n    try {\r\n      rgb = hexRgb(hexColor, {format: 'css'});\r\n    } catch(e) {\r\n      rgb = \"Ошибка!\"\r\n    }\r\n    return rgb;\r\n  }\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(form)\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    if (e.target.value.length === 7) {\r\n      setForm(prev => ({...prev, rgb: convertColor(e.target.value)}))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper' style={changeColor()}>\r\n      <div className='form-wrapper'>\r\n        <form className='form-converter' onSubmit={onFormSubmit}>\r\n          <input className='color hex-color'onChange={onInputChange} placeholder='#FFFFFF'/>\r\n        </form>\r\n        <div className='color rgb-color'>{form.rgb}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import ColorConverter from './components/ColorConverter'\nimport './App.css';\n\nfunction App() {\n  return (\n    <ColorConverter />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}